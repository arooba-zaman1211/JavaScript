<!DOCTYPE html>
<html lang="en">
 <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="http://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">

        <title>Document</title>
        <link rel="icon" href="data:,">
 </head>

 <body class="container">
    <div class="row">
        <div class="col">
            <div class="output"></div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <label for="search">Input Value to search:</label>
            <input type="text" class="form-control" id="search">
            <span class="error-message"></span>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <button class="search_val btn-primary btn">Submit</button>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col">
            <label for="row">Enter number of rows:</label>
            <input type="number" class="form-control" id="row" required>
        </div>
        <div class="col">
            <label for="columns">Enter number of columns:</label>
            <input type="number" class="form-control" id="columns" required>
        </div>
        <div class="col">
            <label for="multiply">Enter a number to multiply:</label>
            <input type="number" class="form-control" id="multiply">
        </div>
        <div class="col">
            <label for="val1">Enter first number Swap:</label>
            <input type="number" class="form-control" id="val1">
            <label for="val2">Enter second number Swap:</label>
            <input type="number" class="form-control" id="val2">
        </div>
    </div>
    <button class="twoD btn-primary btn">Submit</button>
    <br><br>
    <div class="row">
        <div class="col">
            <div class="output2"></div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Copied array</h5>
                    <div class="output3"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Maximum value</h5>
                    <p class="card-text"><span class="maxval"></span></p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Minimum value</h5>
                    <p class="card-text"><span class="minval"></span></p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Multiplied array</h5>
                    <div class="output4"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Swapped array</h5>
                    <div class="output5"></div>
                </div>
            </div>
        </div>
    </div>
</body>
<script>

    //1D Array

    var input = prompt("Enter 10 numbers of your choice");
    var array = input.split(",");
    var output = document.querySelector(".output");
    var search = document.querySelector("#search");
    var error = document.querySelector(".error-message");
    var sval = document.querySelector(".search_val");
    
    //Output on console as string
    var coutput = array.join(",");
    console.log(coutput);

    //In the form of list as html element 
    var houtput = array.map(function(element)
    {
        return "<li>" + element + "</li>";
    }).join("");
    output.innerHTML = "<ul>" + houtput + "</ul>";
    sval.addEventListener("click" , searchValue);

    function searchValue()
    {
        if(array.indexOf(search.value) != -1)
        {
            error.innerHTML = "Value found";
        }
        else{
            error.innerHTML = "Value not found";
        }
    }  
    
    //2D array
    
    var twoD = document.querySelector(".twoD");
    var output2 = document.querySelector(".output2");
    var output3 = document.querySelector(".output3");
    var output4 = document.querySelector(".output4");
    var output5 = document.querySelector(".output5");
    var multiply = document.querySelector("#multiply");
    var row = document.querySelector("#row");
    var column = document.querySelector("#columns");
    var val1 = document.querySelector("#val1");
    var val2 = document.querySelector("#val2");
    var maxval = document.querySelector(".maxval");
    var minval = document.querySelector(".minval");
    twoD.addEventListener("click" , TDmaker);

    function TDmaker()
    {
        var matrix = create2D(row , column);
        var copyied = copyArray(matrix);
        displayMatrix(matrix,output2);
        maxval.innerHTML = Maxval(matrix);
        minval.innerHTML = Minval(matrix);
        displayMatrix(copyied,output3);
        var multi = Multiply(matrix,multiply.value);
        displayMatrix(multi,output4);
        Swap(matrix , val1 , val2);
    };

    function Swap(m , a , b)
    {
        var arr1 = Search(m,a.value);
        var arr2 = Search(m,b.value);
        if(arr1.length!==0 && arr2.length!==0)
        {
            var temp = m[arr1[0][0]][arr1[0][1]];
            m[arr1[0][0]][arr1[0][1]] = m[arr2[0][0]][arr2[0][1]];
            m[arr2[0][0]][arr2[0][1]] = temp;
            displayMatrix(m, output5);
        }
    }

    function Search(m , a)
    {
        var index = []
        for(var i = 0 ; i < m.length ; i++)
        {
            for(var j = 0 ; j < m[i].length ; j++)
            {
                if(m[i][j] == a)
                {
                    index.push([i,j]);
                }
            }
        }
        return index;
    }

    function Maxval(ma)
    {
        var maxv = ma[0][0];
        for(var i = 0 ; i<ma.length ; i++)
        {
            for(var j = 0 ; j<ma[i].length ; j++)
            {
                maxv = Math.max(maxv,ma[i][j]);
            }
        }
        return maxv;
    }

    function Minval(ma)
    {
        var minv = ma[0][0];
        for(var i = 0 ; i<ma.length ; i++)
        {
            for(var j = 0 ; j<ma[i].length ; j++)
            {
                minv = Math.min(minv,ma[i][j]);
            }
        }
        return minv;
    }

    function create2D(row , column)
    {
        var matrix = [];
        for(var i = 0 ; i < row.value ; i++)
        {
            matrix[i] = [];
            for(var j = 0 ; j < column.value ; j++)
            {
                var value = parseInt(prompt("Enter value for row " + (i + 1) + ", column " + (j + 1)));
                matrix[i][j] = value;
            }
        }
        return matrix;
    }

    function displayMatrix(ma,outputt)
    {
        outputt.innerHTML = "";
        var table = document.createElement("Table");
        for(var i=0 ; i < ma.length ; i++)
        {
            var row = document.createElement("tr");
            for(var j=0 ; j < ma[i].length ; j++)
            {
               var cell = document.createElement("td");
               cell.textContent = ma[i][j];
               row.appendChild(cell);
            }
            table.appendChild(row);
        }
        outputt.appendChild(table);
    }

    function copyArray(matrix)
    {
        var copy = [];
        for(var i=0 ; i < matrix.length ; i++)
        {
            copy[i] = [];
            for(var j=0 ; j < matrix[i].length ; j++)
            {
                copy[i][j]=matrix[i][j];
            }
        }
        return copy;
    }

    function Multiply(ma,mul)
    {
        var mmatrix= [];
        for(var i=0 ; i < ma.length ; i++)
        {
            mmatrix[i] = [];
            for(var j=0 ; j < ma[i].length ; j++)
            {
                mmatrix[i][j] = ma[i][j] * mul;
            }
        }
        return mmatrix;
    }
    
</script>
</html>
